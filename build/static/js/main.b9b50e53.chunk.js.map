{"version":3,"sources":["redux/reducers/userReducer.js","redux/reducers/dataReducer.js","redux/reducers/uiReducer.js","redux/store.js","redux/types.js","redux/actions/userActions.js","util/MyButton.js","redux/actions/dataActions.js","components/scream/PostScream.js","components/layout/Notifications.js","components/layout/Navbar.js","util/AuthRoute.js","components/scream/LikeButton.js","components/scream/Comments.js","components/scream/CommentForm.js","components/scream/ScreamDialog.js","components/scream/DeleteScream.js","components/scream/Scream.js","components/profile/StaticProfile.js","pages/user.js","components/profile/EditDetails.js","components/profile/Profile.js","pages/home.js","pages/login.js","pages/signup.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["initialState","authenticated","loading","credentials","likes","notifications","initalState","screams","scream","errors","middleware","thunk","reducers","combineReducers","user","state","action","type","payload","userHandle","handle","screamId","filter","like","forEach","not","read","data","index","findIndex","i","splice","comments","UI","store","createStore","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","logoutUser","dispatch","localStorage","removeItem","axios","defaults","headers","common","getUserData","get","then","res","catch","err","console","group","children","onClick","tip","btnClassName","tipClassName","Tooltip","title","className","placement","IconButton","clearErrors","PostScream","open","body","handleOpen","setState","handleClose","props","handleChange","event","target","name","value","handleSubmit","preventDefault","postScream","nextProps","this","classes","MyButton","Dialog","onClose","fullWidth","maxWidth","closeButton","DialogTitle","DialogContent","onSubmit","TextField","label","multiline","rows","placeholder","error","helperText","textField","onChange","Button","variant","color","submitButton","disabled","CircularProgress","size","progressSpinner","Component","connect","newScream","post","response","withStyles","theme","otherClasses","position","float","marginTop","left","top","Notifications","anchorEl","onMenuOpened","unreadNotificationsIds","map","notificationId","markNotificationsRead","notificationsIcon","dayjs","extend","relativeTime","length","Badge","badgeContent","notificationsMarkup","verb","time","createdAt","fromNow","iconColor","icon","style","marginRight","MenuItem","key","Typography","component","Link","to","recipient","sender","aria-owns","undefined","aria-haspopup","Menu","Boolean","onEntered","notifiactionIds","log","Navbar","AppBar","Toolbar","rest","render","LikeButton","likedScream","find","likeScream","unlikeScream","mapActionsToProps","Comments","Grid","container","comment","userImage","item","sm","src","alt","commentImage","commentData","format","invisibleSeperator","visibleSeperator","height","objectFit","borderRadius","marginLeft","CommentForm","submitComment","textAlign","button","visibleSeparator","ScreamDialog","oldPath","newPath","location","pathname","history","pushState","getScream","openDialog","commentCount","likeCount","dialogMarkup","spinnerDiv","thickness","profileImage","expandButton","dialogContent","padding","marginBottom","DeleteScream","deleteScream","deleteButton","DialogActions","delete","Scream","Card","card","CardMedia","image","tile","CardContent","content","display","minWidth","paper","profile","width","verticalAlign","palette","primary","main","border","margin","imageUrl","website","bio","Paper","href","rel","screamIdParam","match","params","screamsMarkup","spacing","xs","EditDetails","mapUserDetailsToState","userDetails","editUserDetails","Profile","handleImageChange","files","formData","FormData","append","uploadImage","handleEditPicture","document","getElementById","click","handleLogout","id","hidden","align","buttons","cursor","home","getScreams","recentScreamMarkup","login","userData","email","password","loginUser","form","Logo","pageTitle","noValidate","general","customError","progress","token","setItem","push","signup","newUserData","confirmPassword","signupUser","img","pointer","createMuiTheme","light","dark","contrastText","secondary","typography","useNextVariants","fontSize","borderBottom","baseURL","getItem","jwtDecode","exp","Date","now","App","exact","path","hostname","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b9b50e53.chunk.js","sourcesContent":["import { SET_USER, \r\n    SET_AUTHENTICATED, \r\n    SET_UNAUTHENTICATED, \r\n    LOADING_USER,\r\n    LIKE_SCREAM,\r\n    MARK_NOTIFICATIONS_READ,\r\n    UNLIKE_SCREAM } from '../types';\r\n\r\nconst initialState = {\r\n    authenticated: false,\r\n    loading: false,\r\n    credentials: {},\r\n    likes: [],\r\n    notifications: []\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_AUTHENTICATED:\r\n            return {\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        case SET_UNAUTHENTICATED:\r\n            return initialState;\r\n        case SET_USER:\r\n            return {\r\n                authenticated: true,\r\n                loading: false,\r\n                ...action.payload\r\n            };\r\n        case LOADING_USER:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case LIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: [\r\n                    ...state.likes,\r\n                    {\r\n                        userHandle: state.credentials.handle,\r\n                        screamId: action.payload.screamId\r\n                    }\r\n                ]\r\n            }\r\n        case UNLIKE_SCREAM:\r\n            return {\r\n                ...state,\r\n                likes: state.likes.filter((like) => \r\n                    like.screamId !== action.payload.screamId\r\n                )\r\n            }\r\n        case MARK_NOTIFICATIONS_READ:\r\n            state.notifications.forEach(\r\n                (not) => {\r\n                    not.read = true\r\n                }\r\n            );\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_SCREAMS, \r\n    LOADING_DATA, \r\n    LIKE_SCREAM, \r\n    UNLIKE_SCREAM, \r\n    DELETE_SCREAM, \r\n    POST_SCREAM, \r\n    SET_SCREAM,\r\n    SUBMIT_COMMENT} from '../types';\r\n\r\nconst initalState = {\r\n    screams: [],\r\n    scream: {},\r\n    loading: false\r\n}\r\n\r\nexport default function(state = initalState, action) {\r\n    switch(action.type) {\r\n        case LOADING_DATA:\r\n            return {\r\n                ...state,\r\n                loading: true    \r\n            }\r\n        case SET_SCREAMS:\r\n            return {\r\n                ...state,\r\n                screams: action.payload,\r\n                loading: false\r\n            }\r\n        case SET_SCREAM:\r\n            return {\r\n                ...state,\r\n                scream: action.payload\r\n            };\r\n        case LIKE_SCREAM:\r\n        case UNLIKE_SCREAM:\r\n            let index = state.screams.findIndex((scream) => \r\n                scream.screamId === action.payload.screamId\r\n            );\r\n            state.screams[index] = action.payload;\r\n            if (state.scream.screamId === action.payload.screamId) {\r\n                state.scream = action.payload;\r\n            }\r\n            return {\r\n                ...state,\r\n            }\r\n        case DELETE_SCREAM:\r\n            let i = state.screams.findIndex(scream => scream.screamId === action.payload);\r\n            state.screams.splice(i, 1);\r\n            return {\r\n                ...state\r\n            }\r\n        case POST_SCREAM:\r\n            return {\r\n                ...state,\r\n                screams: [\r\n                    action.payload,\r\n                    ...state.screams\r\n                ]\r\n            }\r\n        case SUBMIT_COMMENT:\r\n            return {\r\n                ...state,\r\n                scream: {\r\n                    ...state.scream,\r\n                    comments: [\r\n                        action.payload,\r\n                        ...state.scream.comments\r\n                    ]\r\n                }\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { SET_ERRORS, CLEAR_ERRORS, LOADING_UI, STOP_LOADING_UI } from '../types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    errors: null\r\n}\r\n\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case SET_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: action.payload\r\n            };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                errors: null\r\n            };\r\n        case LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case STOP_LOADING_UI:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport userReducer from './reducers/userReducer';\r\nimport dataReducer from './reducers/dataReducer';\r\nimport uiReducer from './reducers/uiReducer';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst reducers = combineReducers({\r\n  user: userReducer,\r\n  data: dataReducer,\r\n  UI: uiReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_SCREAMS = 'SET_SCREAMS';\r\nexport const SET_SCREAM = 'SET_SCREAM';\r\nexport const LIKE_SCREAM = 'LIKE_SCREAM';\r\nexport const UNLIKE_SCREAM = 'UNLIKE_SCREAM';\r\nexport const DELETE_SCREAM = 'DELETE_SCREAM';\r\nexport const POST_SCREAM = 'POST_SCREAM';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';","import axios from 'axios';\r\nimport { SET_USER, SET_ERRORS, CLEAR_ERRORS, LOADING_UI, SET_UNAUTHENTICATED, LOADING_USER, MARK_NOTIFICATIONS_READ } from '../types';\r\n\r\nexport const loginUser = (userData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI})\r\n    axios.post('/login', userData).then(\r\n        (res) => {\r\n            const token = `Bearer ${res.data.token}`;\r\n            localStorage.setItem('token', token);\r\n            axios.defaults.headers.common['Authorization'] = token;\r\n            dispatch(getUserData());\r\n            dispatch({\r\n                type: CLEAR_ERRORS,\r\n            });\r\n            history.push('/');\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        }\r\n    );\r\n}\r\n\r\n\r\n\r\nexport const signupUser = (newUserData, history) => (dispatch) => {\r\n    dispatch({ type: LOADING_UI})\r\n    axios.post('/signup', newUserData).then(\r\n        (res) => {\r\n            const token = `Bearer ${res.data.token}`;\r\n            localStorage.setItem('token', token);\r\n            axios.defaults.headers.common['Authorization'] = token;\r\n            dispatch(getUserData());\r\n            dispatch({\r\n                type: CLEAR_ERRORS,\r\n            });\r\n            history.push('/');\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            });\r\n        }\r\n    );\r\n}\r\n\r\n\r\nexport const logoutUser = () => (dispatch) => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    dispatch({\r\n        type: SET_UNAUTHENTICATED\r\n    });\r\n}\r\n\r\n\r\n\r\nexport const getUserData = () => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.get('/user').then(\r\n        (res) => {\r\n            dispatch({\r\n                type: SET_USER,\r\n                payload: res.data\r\n            })\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            console.group(err);\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const uploadImage = (formData) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post('/user/image', formData).then(\r\n        () => {\r\n            dispatch(getUserData());\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            console.log(err)\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const editUserDetails = (userDetails) => (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios.post('/user', userDetails).then(\r\n        () => {\r\n            dispatch(getUserData());\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            console.log(err);\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const markNotificationsRead = (notifiactionIds) => dispatch => {\r\n    axios.post('/notifications', notifiactionIds).then(\r\n        (res) => {\r\n            dispatch({\r\n                type: MARK_NOTIFICATIONS_READ\r\n            })\r\n        })\r\n        .catch(\r\n        (err) => {\r\n            console.log(err)    \r\n        }\r\n    );\r\n}","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default ({children, onClick, tip, btnClassName, tipClassName}) => (\r\n    <Tooltip title={tip} className={tipClassName} placement='top'>\r\n        <IconButton onClick={onClick} className={btnClassName}>{children}</IconButton>\r\n    </Tooltip>\r\n)\r\n","import axios from 'axios';\r\nimport { LOADING_UI, \r\n    SET_SCREAMS, \r\n    LOADING_DATA, \r\n    LIKE_SCREAM, \r\n    UNLIKE_SCREAM, \r\n    DELETE_SCREAM, \r\n    POST_SCREAM, \r\n    SET_ERRORS, \r\n    SET_SCREAM,\r\n    CLEAR_ERRORS, \r\n    STOP_LOADING_UI,\r\n    SUBMIT_COMMENT } from '../types';\r\n\r\n\r\nexport const getScreams = () => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get('/screams').then(\r\n        (res) => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data\r\n            })\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            dispatch({ \r\n                type: SET_SCREAMS,\r\n                payload: [] \r\n            });\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const getScream = (screamId) => (dispatch) => {\r\n    dispatch({\r\n        type: LOADING_UI\r\n    });\r\n    axios.get(`/scream/${screamId}`).then(\r\n        (res) => {\r\n            dispatch({\r\n                type: SET_SCREAM,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n                type: STOP_LOADING_UI,\r\n            })\r\n        }\r\n    ).catch((err) => {\r\n        console.log(err);\r\n    })\r\n}\r\n\r\n\r\n\r\nexport const likeScream = (screamId) => (dispatch) => {\r\n    axios.get(`/scream/${screamId}/like`).then(\r\n        (res) => {\r\n            dispatch({\r\n                type: LIKE_SCREAM,\r\n                payload: res.data\r\n            });\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            console.log(err);\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const unlikeScream = (screamId) => (dispatch) => {\r\n    axios.get(`/scream/${screamId}/unlike`).then(\r\n        (res) => {\r\n            dispatch({\r\n                type: UNLIKE_SCREAM,\r\n                payload: res.data\r\n            });\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            console.log(err);\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const submitComment = (screamId, commentData) => (dispatch) => {\r\n    axios\r\n      .post(`/scream/${screamId}/comment`, commentData)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: SUBMIT_COMMENT,\r\n          payload: res.data\r\n        });\r\n        dispatch(clearErrors());\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n      });\r\n  };\r\n\r\n\r\nexport const deleteScream = (screamId) => (dispatch) => {\r\n    axios.delete(`/scream/${screamId}`).then(\r\n        (res) => {\r\n            dispatch({\r\n                type: DELETE_SCREAM,\r\n                payload: screamId\r\n            });\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            console.log(err);\r\n        }\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const postScream = (newScream) => (dispatch) => {\r\n    dispatch({\r\n        type: LOADING_UI\r\n    });\r\n    axios.post('/scream', newScream).then(\r\n        (res) => {\r\n            dispatch({\r\n                type: POST_SCREAM,\r\n                payload: res.data\r\n            });\r\n            dispatch(clearErrors());\r\n        }\r\n    ).catch(\r\n        (err) => {\r\n            dispatch({\r\n                type: SET_ERRORS,\r\n                payload: err.response.data\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\n\r\nexport const clearErrors = () => (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    });\r\n}\r\n\r\n\r\nexport const getUserData = (userHandle) => (dispatch) => {\r\n    dispatch({ type: LOADING_DATA });\r\n    axios.get(`/user/${userHandle}`).then(\r\n        (res) => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: res.data.screams\r\n            });\r\n        }\r\n    ).catch(\r\n        () => {\r\n            dispatch({\r\n                type: SET_SCREAMS,\r\n                payload: null\r\n            });\r\n        }\r\n    );\r\n}","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { postScream, clearErrors } from '../../redux/actions/dataActions';\r\nimport MyButton from '../../util/MyButton';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherClasses,\r\n    submitButton: {\r\n        position: 'relative',\r\n        float: 'right',\r\n        marginTop: 10\r\n    },\r\n    progressSpinner: {\r\n        position: 'absolute'\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '6%'\r\n    }\r\n});\r\n\r\n\r\nclass PostScream extends Component {\r\n    state = {\r\n        open: false,\r\n        body: '',\r\n        errors: {}\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({\r\n                errors: nextProps.UI.errors\r\n            });\r\n        }\r\n        if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n            this.setState({\r\n                body: '',\r\n                open: false,\r\n                errors: {}\r\n            });\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.props.clearErrors();\r\n        this.setState({\r\n            open: false,\r\n            errors: {}\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.postScream({\r\n            body: this.state.body\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { errors } = this.state;\r\n        const { classes, UI: { loading } } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip='Post a scream!'>\r\n                    <AddIcon />\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth='sm'>\r\n                    <MyButton tip='close' onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogTitle>\r\n                        Post a new scream\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField \r\n                                name='body'\r\n                                type='text'\r\n                                label='Scream'\r\n                                multiline\r\n                                rows='3'\r\n                                placeholder='Scream anything'\r\n                                error={errors.body ? true : false}\r\n                                helperText={errors.body}\r\n                                className={classes.textField}\r\n                                onChange={this.handleChange}\r\n                                fullWidth\r\n                                />\r\n                            <Button type='submit' variant='contained' color='primary' className={classes.submitButton} disabled={loading}>\r\n                                Submit\r\n                                { loading &&\r\n                                    (<CircularProgress size={30} className={classes.progressSpinner} />)\r\n                                }\r\n                            </Button>\r\n\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nPostScream.propTypes = {\r\n    postScream: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    UI: state.UI\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { postScream, clearErrors })(withStyles(styles)(PostScream))","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\nimport { markNotificationsRead } from '../../redux/actions/userActions';\r\n\r\n\r\nclass Notifications extends Component {\r\n    state = {\r\n        anchorEl: null\r\n    }\r\n\r\n    handleOpen = (event) => {\r\n        this.setState({ anchorEl: event.target });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    onMenuOpened = () => {\r\n        let unreadNotificationsIds = this.props.notifications\r\n            .filter((not) => !not.read)\r\n            .map((not) => not.notificationId);\r\n        this.props.markNotificationsRead(unreadNotificationsIds);\r\n    };\r\n\r\n    render() {\r\n        const notifications = this.props.notifications;\r\n        const anchorEl = this.state.anchorEl;\r\n\r\n        dayjs.extend(relativeTime);\r\n\r\n        let notificationsIcon;\r\n        if (notifications && notifications.length > 0) {\r\n            notifications.filter(not => not.read === false).length > 0 ? notificationsIcon = (\r\n                <Badge badgeContent={notifications.filter(not => not.read === false).length} color='secondary'>\r\n                    <NotificationsIcon />\r\n                </Badge>\r\n            ) : (\r\n                    notificationsIcon = <NotificationsIcon />\r\n                )\r\n        } else {\r\n            notificationsIcon = <NotificationsIcon />\r\n        }\r\n\r\n        let notificationsMarkup = notifications && notifications.length > 0 ? (\r\n            notifications.map(not => {\r\n                const verb = not.type === 'like' ? 'liked' : 'commented on';\r\n                const time = dayjs(not.createdAt).fromNow();\r\n                const iconColor = not.read ? 'primary' : 'secondary';\r\n                const icon = not.type === 'like' ? (\r\n                    <FavoriteIcon color={iconColor} style={{ marginRight: 10 }} />\r\n                ) : (\r\n                        <ChatIcon color={iconColor} style={{ marginRight: 10 }} />\r\n                    )\r\n\r\n                return (\r\n                    <MenuItem key={not.createdAt} onClick={this.handleClose}>\r\n                        {icon}\r\n                        <Typography component={Link} color='primary' variant='body1' to={`/users/${not.recipient}/scream/${not.screamId}`}>\r\n                            {not.sender} {verb} your scream {time}\r\n                        </Typography>\r\n                    </MenuItem>\r\n                )\r\n\r\n            })\r\n        ) : (\r\n                <MenuItem onClick={this.handleClose}>\r\n                    You have no notifiactions yet\r\n            </MenuItem>\r\n            )\r\n\r\n        return (\r\n            <Fragment>\r\n                <Tooltip placement='top' title='Notifications'>\r\n                    <IconButton aria-owns={anchorEl ? 'simple-menu' : undefined} aria-haspopup='true' onClick={this.handleOpen}>\r\n                        {notificationsIcon}\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Menu anchorEl={anchorEl} open={Boolean(anchorEl)} onClose={this.handleClose} onEntered={this.onMenuOpened}>\r\n                    {notificationsMarkup}\r\n                </Menu>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nNotifications.propTypes = {\r\n    markNotificationsRead: PropTypes.func.isRequired,\r\n    notifications: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    notifications: state.user.notifications\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, { markNotificationsRead })(Notifications);","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MyButton from '../../util/MyButton';\r\nimport PostScream from '../scream/PostScream';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport Notifications from '../layout/Notifications';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n\r\n        const { authenticated } = this.props;\r\n\r\n        return (\r\n            <AppBar>\r\n                <Toolbar className='nav-container'>\r\n                    {authenticated ? (\r\n                        <Fragment>\r\n                            <PostScream />\r\n                            <Link to='/'>\r\n                                <MyButton tip='Home'>\r\n                                    <HomeIcon />\r\n                                </MyButton>\r\n                            </Link>\r\n                            <Notifications />\r\n                        </Fragment>\r\n                    ) : (\r\n                            <Fragment>\r\n                                <Button color=\"inherit\" component={Link} to='/login'>Login</Button>\r\n                                <Button color=\"inherit\" component={Link} to='/'>Home</Button>\r\n                                <Button color=\"inherit\" component={Link} to='/signup'>Signup</Button>\r\n                            </Fragment>\r\n                        )\r\n                    }\r\n                </Toolbar>\r\n            </AppBar >\r\n        );\r\n    }\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\n    authenticated: PropTypes.bool.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    authenticated: state.user.authenticated\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navbar)\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AuthRoute = ({ component: Component, authenticated, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      authenticated === true ? <Redirect to=\"/\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  authenticated: state.user.authenticated\r\n});\r\n\r\nAuthRoute.propTypes = {\r\n  user: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps)(AuthRoute);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { likeScream, unlikeScream } from '../../redux/actions/dataActions';\r\nimport MyButton from '../../util/MyButton';\r\n\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\n\r\nclass LikeButton extends Component {\r\n\r\n    likedScream = () => {\r\n        if ((this.props.user.likes) && (this.props.user.likes.find(like => like.screamId === this.props.screamId))) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    likeScream = () => {\r\n        this.props.likeScream(this.props.screamId);\r\n    }\r\n\r\n    unlikeScream = () => {\r\n        this.props.unlikeScream(this.props.screamId);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { authenticated } = this.props.user;\r\n\r\n        const likeButton = !authenticated ? (\r\n            <Link to='/login'>\r\n            <MyButton tip='like'>\r\n                <FavoriteBorderIcon color='primary' /> \r\n            </MyButton>\r\n            </Link>\r\n        ) : (\r\n            this.likedScream() ? (\r\n                <MyButton tip='Undo like' onClick={this.unlikeScream}>\r\n                    <FavoriteIcon color='primary' />\r\n                </MyButton>\r\n            ) : (\r\n                <MyButton tip='Like' onClick={this.likeScream}>\r\n                    <FavoriteBorderIcon color='primary' />\r\n                </MyButton>\r\n            )\r\n        );\r\n\r\n        return likeButton\r\n    }\r\n}\r\n\r\nLikeButton.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    likeScream: PropTypes.func.isRequired,\r\n    unlikeScream: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    likeScream,\r\n    unlikeScream\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(LikeButton);\r\n","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherClasses,\r\n    commentImage: {\r\n        maxWidth: '100%',\r\n        height: 100,\r\n        objectFit: 'cover',\r\n        borderRadius: '50%'\r\n    },\r\n    commentData: {\r\n        marginLeft: 20\r\n    }\r\n});\r\n\r\nclass Comments extends Component {\r\n\r\n    render() {\r\n        \r\n        const { comments, classes } = this.props;\r\n\r\n        return (\r\n            <Grid container>\r\n                {comments.map((comment, index) => {\r\n                    const { body, createdAt, userImage, userHandle } = comment;\r\n                    return (\r\n                        <Fragment key={createdAt}>\r\n                            <Grid item sm={12}>\r\n                                <Grid container>\r\n                                    <Grid item sm={2}>\r\n                                        <img src={userImage} alt='comment' className={classes.commentImage} />\r\n                                    </Grid>\r\n                                    <Grid item sm={9}>\r\n                                        <div className={classes.commentData}>\r\n                                            <Typography variant='h5' component={Link} to={`/users/${userHandle}`} color='primary'>\r\n                                                {userHandle}\r\n                                            </Typography>\r\n                                            <Typography variant='body2' color='textSecondary'>\r\n                                                {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                                            </Typography>\r\n                                            <hr className={classes.invisibleSeperator} />\r\n                                            <Typography variant='body1'>\r\n                                                {body}\r\n                                            </Typography>\r\n                                        </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            { index !== comments.length - 1 &&\r\n                                (\r\n                                    <hr className={classes.visibleSeperator} />\r\n                                )\r\n                            }\r\n                        </Fragment>\r\n                    )\r\n                })}\r\n            </Grid>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nComments.propTypes = {\r\n    comments: PropTypes.array.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Comments);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport { submitComment } from '../../redux/actions/dataActions';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherClasses\r\n})\r\n\r\n\r\nclass CommentForm extends Component {\r\n    state = {\r\n      body: '',\r\n      errors: {}\r\n    }\r\n  \r\n    componentWillReceiveProps(nextProps) {\r\n      if (nextProps.UI.errors) {\r\n        this.setState({ errors: nextProps.UI.errors });\r\n      }\r\n      if (!nextProps.UI.errors && !nextProps.UI.loading) {\r\n        this.setState({ body: '' });\r\n      }\r\n    }\r\n  \r\n    handleChange = (event) => {\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      this.props.submitComment(this.props.screamId, { body: this.state.body });\r\n    };\r\n  \r\n    render() {\r\n      const { classes, authenticated } = this.props;\r\n      const errors = this.state.errors;\r\n  \r\n      const commentFormMarkup = authenticated ? (\r\n        <Grid item sm={12} style={{ textAlign: 'center' }}>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              name=\"body\"\r\n              type=\"text\"\r\n              label=\"Comment on scream\"\r\n              error={errors.error ? true : false}\r\n              helperText={errors.error}\r\n              value={this.state.body}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n              className={classes.textField}\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </form>\r\n          <hr className={classes.visibleSeparator} />\r\n        </Grid>\r\n      ) : null;\r\n      return commentFormMarkup;\r\n    }\r\n  }\r\n  \r\n  CommentForm.propTypes = {\r\n    submitComment: PropTypes.func.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    authenticated: PropTypes.bool.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = (state) => ({\r\n    UI: state.UI,\r\n    authenticated: state.user.authenticated\r\n  });\r\n  \r\n  export default connect(\r\n    mapStateToProps,\r\n    { submitComment }\r\n  )(withStyles(styles)(CommentForm));\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\n\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport MyButton from '../../util/MyButton';\r\nimport { getScream, clearErrors } from '../../redux/actions/dataActions';\r\nimport LikeButton from './LikeButton';\r\nimport Comments from './Comments';\r\nimport CommentForm from './CommentForm';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherClasses,\r\n    profileImage: {\r\n        maxWidth: 200,\r\n        height: 200,\r\n        borderRadius: '50%',\r\n        objectFit: 'cover'\r\n    },\r\n    dialogContent: {\r\n        padding: 20\r\n    },\r\n    closeButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    expandButton: {\r\n        position: 'absolute',\r\n        left: '90%'\r\n    },\r\n    spinnerDiv: {\r\n        textAlign: 'center',\r\n        marginTop: 50,\r\n        marginBottom: 50\r\n    }\r\n});\r\n\r\n\r\nclass ScreamDialog extends Component {\r\n    state = {\r\n        open: false,\r\n        oldPath: '',\r\n        newPath: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.openDialog) {\r\n            this.handleOpen();\r\n        }\r\n    }\r\n\r\n    handleOpen = () => {\r\n        let oldPath = window.location.pathname;\r\n\r\n        const { userHandle, screamId } = this.props;\r\n\r\n        const newPath = `/users/${userHandle}/scream/${screamId}`;\r\n\r\n        if (oldPath == newPath) {\r\n            oldPath = `/users/${userHandle}`;\r\n        }\r\n\r\n        window.history.pushState(null, null, newPath);\r\n\r\n        this.setState({\r\n            open: true,\r\n            oldPath,\r\n            newPath\r\n        });\r\n        this.props.getScream(this.props.screamId);\r\n    }\r\n\r\n    handleClose = () => {\r\n        window.history.pushState(null, null, this.state.oldPath);\r\n        this.setState({\r\n            open: false\r\n        });\r\n        this.props.clearErrors();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes, scream: { screamId, body, createdAt, likeCount, commentCount, comments, userImage, userHandle }, UI: { loading } } = this.props;\r\n        const dialogMarkup = loading ? (\r\n           <div className={classes.spinnerDiv}>\r\n                <CircularProgress size={200} thickness={2}/>\r\n           </div>\r\n        ) : (\r\n            <Grid container>\r\n                <Grid item sm={5}>\r\n                    <img src={userImage} alt='Profile' className={classes.profileImage} />\r\n                </Grid>\r\n                <Grid item sm={7}>\r\n                    <Typography component={Link} color='primary' variant='h5' to={`/users/${userHandle}`}>\r\n                        @{userHandle}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeperator} />\r\n                    <Typography variant='body2' color='textSecondary'>\r\n                        {dayjs(createdAt).format('h:mm a, MMMM DD YYYY')}\r\n                    </Typography>\r\n                    <hr className={classes.invisibleSeperator} />\r\n                    <Typography variant='body1'>\r\n                        {body}\r\n                    </Typography>\r\n                    {/* <LikeButton screamId={screamId} />\r\n                    <span>{likeCount} likes</span> */}\r\n                    <MyButton tip='comments'>\r\n                        <ChatIcon color='primary' />\r\n                    </MyButton>\r\n                    <span>{commentCount} Comments</span>\r\n                </Grid>\r\n                <hr className={classes.visibleSeperator} />\r\n                <CommentForm screamId={screamId} />\r\n                <Comments comments={comments} />\r\n            </Grid>\r\n        )\r\n\r\n        return (\r\n            <Fragment>\r\n                <MyButton onClick={this.handleOpen} tip='Expand Scream' tipClassName={classes.expandButton}>\r\n                    <UnfoldMoreIcon color='primary' />\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth='sm'>\r\n                    <MyButton tip='close' onClick={this.handleClose} tipClassName={classes.closeButton}>\r\n                        <CloseIcon />\r\n                    </MyButton>\r\n                    <DialogContent className={classes.dialogContent}>\r\n                        {dialogMarkup}\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nScreamDialog.propTypes = {\r\n    clearErrors: PropTypes.func.isRequired,\r\n    getScream: PropTypes.func.isRequired,\r\n    screamId: PropTypes.string.isRequired,\r\n    userHandle: PropTypes.string.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    scream: state.data.scream,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    getScream,\r\n    clearErrors\r\n}\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(ScreamDialog));","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteScream } from '../../redux/actions/dataActions';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport MyButton from '../../util/MyButton';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\n\r\n\r\nconst styles = {\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '90%',\r\n        top: '10%'\r\n    }\r\n}\r\n\r\n\r\nclass DeleteScream extends Component {\r\n\r\n    state = {\r\n        open: false\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    deleteScream = () => {\r\n        this.props.deleteScream(this.props.screamId);\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip='Delete scream' onClick={this.handleOpen} btnClassName={classes.deleteButton}>\r\n                    <DeleteOutlineIcon color='secondary' />\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth='sm'>\r\n                    <DialogTitle>\r\n                        Are you sure you want to delete this scream ?\r\n                    </DialogTitle>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color='primary'>Cancel</Button>\r\n                        <Button onClick={this.deleteScream} color='secondary'>Delete</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nDeleteScream.propTypes = {\r\n    deleteScream: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    screamId: PropTypes.string.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, { deleteScream })(withStyles(styles)(DeleteScream));\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport { Card, CardContent, CardMedia, Typography, CardActionArea, CardActions } from '@material-ui/core';\r\n\r\nimport ScreamDialog from './ScreamDialog';\r\nimport DeleteScream from './DeleteScream';\r\nimport MyButton from '../../util/MyButton';\r\nimport LikeButton from './LikeButton';\r\n\r\n\r\nconst styles = {\r\n    card: {\r\n        position: 'relative',\r\n        display: 'flex',\r\n        marginBottom: 20\r\n    },\r\n    image: {\r\n        minWidth: 200\r\n    },\r\n    content: {\r\n        padding: 25,\r\n        objectFit: 'cover'\r\n    }\r\n}\r\n\r\nclass Scream extends Component {\r\n\r\n    render() {\r\n\r\n        dayjs.extend(relativeTime)\r\n\r\n        const { classes, scream: { body, createdAt, userImage, userHandle, screamId, likeCount, commentCount }, user: { authenticated, credentials: { handle } } } = this.props;\r\n\r\n\r\n        const deleteButton = authenticated && userHandle === handle ? (\r\n            <DeleteScream screamId={screamId} />\r\n        ) : null;\r\n\r\n        return (\r\n            <Card className={classes.card}>\r\n                <CardMedia image={userImage} tile=\"Profile Image\" className={classes.image} />\r\n                <CardContent className={classes.content}>\r\n                    <Typography variant=\"h5\" component={Link} color='primary' to={`/users/${userHandle}`}>{userHandle}</Typography>\r\n                    {deleteButton}\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">{dayjs(createdAt).fromNow()}</Typography>\r\n                    <Typography variant=\"body1\">{body}</Typography>\r\n                    <LikeButton screamId={screamId} />\r\n                    <span>{likeCount} Likes</span>\r\n                    <MyButton tip='comments'>\r\n                        <ChatIcon color='primary' />\r\n                    </MyButton>\r\n                    <span>{commentCount} Comments</span>\r\n                    <ScreamDialog screamId={screamId} userHandle={userHandle} openDialog={this.props.openDialog}/>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nScream.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    scream: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    openDialog: PropTypes.bool\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(withStyles(styles)(Scream));\r\n","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        padding: 20\r\n    },\r\n    profile: {\r\n        '& .image-wrapper': {\r\n            textAlign: 'center',\r\n            position: 'relative',\r\n            '& button': {\r\n                position: 'absolute',\r\n                top: '80%',\r\n                left: '70%'\r\n            }\r\n        },\r\n        '& .profile-image': {\r\n            width: 200,\r\n            height: 200,\r\n            objectFit: 'cover',\r\n            maxWidth: '100%',\r\n            borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n            textAlign: 'center',\r\n            '& span, svg': {\r\n                verticalAlign: 'middle'\r\n            },\r\n            '& a': {\r\n                color: theme.palette.primary.main\r\n            }\r\n        },\r\n        '& hr': {\r\n            border: 'none',\r\n            margin: '0 0 10px 0'\r\n        }\r\n    }\r\n});\r\n\r\n\r\nconst StaticProfile = (props) => {\r\n\r\n    const { classes, profile: { handle, createdAt, imageUrl, website, bio, location } } = props;\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <div className={classes.profile}>\r\n                <div className='image-wrapper'>\r\n                    <img src={imageUrl} alt='profile' className='profile-image' />\r\n                </div>\r\n                <hr />\r\n                <div className='profile-details'>\r\n                    <MuiLink component={Link} to={`/users/${handle}`} color='primary' variant='h5'>\r\n                        @{handle}\r\n                    </MuiLink>\r\n                    <hr />\r\n                    {bio &&\r\n                        <Fragment>\r\n                            <Typography color='primary' /> <span>{bio}</span>\r\n                        </Fragment>\r\n                    }\r\n                    <hr />\r\n                    {location && (\r\n                        <Fragment>\r\n                            <LocationOnIcon color='primary' /> <span>{location}</span>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    {website && (\r\n                        <Fragment>\r\n                            <LinkIcon color='primary' />\r\n                            <a href={website} target='_blank' rel='noopener noreferrer'>\r\n                                {' '}{website}\r\n                            </a>\r\n                            <hr />\r\n                        </Fragment>\r\n                    )}\r\n                    <CalendarTodayIcon color='primary' />{' '}\r\n                    <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                </div>\r\n            </div>\r\n        </Paper>\r\n    )\r\n\r\n}\r\n\r\nStaticProfile.propTypes = {\r\n    profile: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default withStyles(styles)(StaticProfile);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { getUserData } from '../redux/actions/dataActions';\r\nimport Scream from '../components/scream/Scream';\r\nimport StaticProfile from '../components/profile/StaticProfile';\r\n\r\nclass user extends Component {\r\n\r\n    state = {\r\n        profile: null,\r\n        screamIdParam: null\r\n    }\r\n\r\n    componentWillMount() {\r\n        const handle = this.props.match.params.handle;\r\n        const screamId = this.props.match.params.screamId;\r\n\r\n        if (screamId) {\r\n            this.setState({\r\n                screamIdParam: screamId\r\n            });\r\n        }\r\n\r\n        this.props.getUserData(handle);\r\n        axios.get(`/user/${handle}`).then(\r\n            (res) => {\r\n                this.setState({\r\n                    profile: res.data.user\r\n                })\r\n            }\r\n        ).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { screams, loading } = this.props.data;\r\n        const { screamIdParam } = this.state;\r\n\r\n        const screamsMarkup = loading ? (\r\n            <p>Loading....</p>\r\n        ) : screams === null ? (\r\n            <p>No screams from this user</p>\r\n        ) : !screamIdParam ? (\r\n            screams.map(scream => <Scream key={scream.screamId} scream={scream} />)\r\n        ) : (\r\n            screams.map((scream) => {\r\n                if (scream.screamId !== screamIdParam) {\r\n                    return <Scream key={scream.screamId} scream={scream} />\r\n                } else {\r\n                    return <Scream key={scream.screamId} scream={scream} openDialog/>\r\n                }\r\n            })\r\n        )\r\n\r\n        return (\r\n            <Grid container spacing={4}>\r\n                <Grid item sm={8} xs={12}>\r\n                    {screamsMarkup}\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    { this.state.profile === null ? (\r\n                        <p>Loading....</p>\r\n                    ) : (\r\n                        <StaticProfile profile={this.state.profile} />\r\n                    ) }\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nuser.propTypes = {\r\n    getUserData: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n});\r\n\r\nexport default connect(mapStateToProps, { getUserData })(user);\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { editUserDetails } from '../../redux/actions/userActions';\r\nimport MyButton from '../../util/MyButton';\r\nimport { withStyles } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherClasses,\r\n    button: {\r\n        float: 'right'\r\n    }\r\n});\r\n\r\nclass EditDetails extends Component {\r\n\r\n    state = {\r\n        bio: '',\r\n        location: '',\r\n        website: '',\r\n        open: false\r\n    }\r\n\r\n    mapUserDetailsToState = (credentials) => {\r\n        this.setState({\r\n            bio: credentials.bio ? credentials.bio : '',\r\n            website: credentials.website ? credentials.website : '',\r\n            location: credentials.location ? credentials.location : ''\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { credentials } = this.props;\r\n        this.mapUserDetailsToState(credentials);\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            open: true\r\n        });\r\n        this.mapUserDetailsToState(this.props.credentials);\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit = () => {\r\n        const userDetails = {\r\n            bio: this.state.bio,\r\n            website: this.state.website,\r\n            location: this.state.location\r\n        }\r\n        this.props.editUserDetails(userDetails);\r\n        this.handleClose();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <MyButton tip='Edit Details' onClick={this.handleOpen} btnClassName={this.props.classes.button}>\r\n                    <EditIcon color='primary' />\r\n                </MyButton>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth maxWidth='sm'>\r\n                    <DialogTitle>Edit your detaisl</DialogTitle>\r\n                    <DialogContent>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                name='bio'\r\n                                type='text'\r\n                                label='Bio'\r\n                                multiline\r\n                                rows='3'\r\n                                placeholder='A short bio abput yourself'\r\n                                className={this.props.classes.textField}\r\n                                value={this.state.bio}\r\n                                onChange={this.handleChange}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name='website'\r\n                                type='text'\r\n                                label='Website'\r\n                                className={this.props.classes.textField}\r\n                                value={this.state.website}\r\n                                onChange={this.handleChange}\r\n                                fullWidth />\r\n                            <TextField\r\n                                name='location'\r\n                                type='text'\r\n                                label='Location'\r\n                                className={this.props.classes.textField}\r\n                                value={this.state.location}\r\n                                onChange={this.handleChange}\r\n                                fullWidth />\r\n                            <DialogActions>\r\n                                <Button onClick={this.handleClose} color='primary'>Cancel</Button>\r\n                                <Button type='submit' color='primary'>Save</Button>\r\n                            </DialogActions>\r\n                        </form>\r\n                    </DialogContent>\r\n                </Dialog>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nEditDetails.propTypes = {\r\n    editUserDetails: PropTypes.func.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    credentials: state.user.credentials\r\n})\r\n\r\nexport default connect(mapStateToProps, { editUserDetails })(withStyles(styles)(EditDetails));\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logoutUser, uploadImage } from '../../redux/actions/userActions';\r\nimport PropTypes from 'prop-types';\r\nimport EditDetails from './EditDetails.js';\r\nimport MyButton from '../../util/MyButton';\r\nimport Button from '@material-ui/core/Button';\r\nimport dayjs from 'dayjs';\r\nimport MuiLink from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday';\r\nimport KeyboardReturn from '@material-ui/icons/KeyboardReturn';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n\r\nconst styles = (theme) => ({\r\n    paper: {\r\n        padding: 20\r\n    },\r\n    profile: {\r\n        '& .image-wrapper': {\r\n            textAlign: 'center',\r\n            position: 'relative',\r\n            '& button': {\r\n                position: 'absolute',\r\n                top: '80%',\r\n                left: '70%'\r\n            }\r\n        },\r\n        '& .profile-image': {\r\n            width: 200,\r\n            height: 200,\r\n            objectFit: 'cover',\r\n            maxWidth: '100%',\r\n            borderRadius: '50%'\r\n        },\r\n        '& .profile-details': {\r\n            textAlign: 'center',\r\n            '& span, svg': {\r\n                verticalAlign: 'middle'\r\n            },\r\n            '& a': {\r\n                color: theme.palette.primary.main\r\n            }\r\n        },\r\n        '& hr': {\r\n            border: 'none',\r\n            margin: '0 0 10px 0'\r\n        },\r\n        '& svg.button': {\r\n            '&:hover': {\r\n                cursor: 'pointer'\r\n            }\r\n        }\r\n    },\r\n    buttons: {\r\n        textAlign: 'center',\r\n        '& a': {\r\n            margin: '20px 10px'\r\n        }\r\n    }\r\n});\r\n\r\n\r\nclass Profile extends Component {\r\n\r\n    handleImageChange = (event) => {\r\n        const image = event.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append('image', image, image.name);\r\n        this.props.uploadImage(formData);\r\n    }\r\n\r\n    handleEditPicture = () => {\r\n        const fileInput = document.getElementById('imageInput');\r\n        fileInput.click();\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes, user: { credentials: { handle, createdAt, imageUrl, bio, website, location }, loading, authenticated } } = this.props;\r\n        let profileMarkup = !loading ? (authenticated ? (\r\n            <Paper className={classes.paper}>\r\n                <div className={classes.profile}>\r\n                    <div className='image-wrapper'>\r\n                        <img src={imageUrl} alt='profile' className='profile-image' />\r\n                        <input type='file' id='imageInput' hidden=\"hidden\" onChange={this.handleImageChange} />\r\n                        <MyButton tip='Edit profile picture' onClick={this.handleEditPicture} btnClassName='button'>\r\n                            <EditIcon color='primary' />\r\n                        </MyButton>\r\n                    </div>\r\n                    <hr />\r\n                    <div className='profile-details'>\r\n                        <MuiLink component={Link} to={`/users/${handle}`} color='primary' variant='h5'>\r\n                            @{handle}\r\n                        </MuiLink>\r\n                        <hr />\r\n                        {bio &&\r\n                            <Fragment>\r\n                                <Typography color='primary' /> <span>{bio}</span>\r\n                            </Fragment>\r\n                        }\r\n                        <hr />\r\n                        {location && (\r\n                            <Fragment>\r\n                                <LocationOnIcon color='primary' /> <span>{location}</span>\r\n                                <hr />\r\n                            </Fragment>\r\n                        )}\r\n                        {website && (\r\n                            <Fragment>\r\n                                <LinkIcon color='primary' />\r\n                                <a href={website} target='_blank' rel='noopener noreferrer'>\r\n                                    {' '}{website}\r\n                                </a>\r\n                                <hr />\r\n                            </Fragment>\r\n                        )}\r\n                        <CalendarTodayIcon color='primary' />{' '}\r\n                        <span>Joined {dayjs(createdAt).format('MMM YYYY')}</span>\r\n                    </div>\r\n                    <MyButton tip='Logout' onClick={this.handleLogout}>\r\n                        <KeyboardReturn color='primary' />\r\n                    </MyButton>\r\n                    <EditDetails />\r\n                </div>\r\n            </Paper>\r\n        ) : (\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='body2' align='center'>\r\n                        No Profile found, please login again\r\n                </Typography>\r\n                    <div className={classes.buttons}>\r\n                        <Button variant='contained' color='primary' component={Link} to='/login'>Login</Button>\r\n                        <Button variant='contained' color='secondary' component={Link} to='/signup'>Signup</Button>\r\n                    </div>\r\n                </Paper>\r\n            )) : (<p>loading...</p>);\r\n\r\n        return profileMarkup;\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    logoutUser,\r\n    uploadImage\r\n}\r\n\r\nProfile.propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired,\r\n    uploadImage: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(Profile))\r\n","import React, { Component } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Scream from '../components/scream/Scream';\r\nimport Profile from '../components/profile/Profile';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getScreams } from '../redux/actions/dataActions';\r\n\r\nclass home extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getScreams();\r\n    }\r\n\r\n    render() {\r\n\r\n        const { screams, loading } = this.props.data;\r\n\r\n        let recentScreamMarkup = !loading ? ( \r\n            screams.map((scream) => {\r\n                return (\r\n                    <Scream key={scream.screamId} scream={scream} />\r\n                );\r\n            })\r\n        ) : ( <p>Loading...</p> );\r\n\r\n        return (\r\n            <Grid container spacing={4}>\r\n                <Grid item sm={8} xs={12}>\r\n                    { recentScreamMarkup }\r\n                </Grid>\r\n                <Grid item sm={4} xs={12}>\r\n                    <Profile />\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nhome.propTypes = {\r\n    getScreams: PropTypes.func.isRequired,\r\n    data: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    data: state.data\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { getScreams })(home);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Logo from '../logo.svg';\r\n\r\nimport { loginUser } from '../redux/actions/userActions';\r\n\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = (theme) => ({\r\n  ...theme.otherClasses\r\n});\r\n\r\n\r\nclass login extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: '',\r\n      password: '',\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.UI.errors) {\r\n      this.setState({ errors: nextProps.UI.errors });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password\r\n    };\r\n    this.props.loginUser(userData, this.props.history);\r\n  };\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  render() {\r\n    const {\r\n      classes,\r\n      UI: { loading }\r\n    } = this.props;\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <Grid container className={classes.form}>\r\n        <Grid item sm />\r\n        <Grid item sm>\r\n          <img src={Logo} alt=\"logo\" className={classes.image} />\r\n          <Typography variant=\"h2\" className={classes.pageTitle}>\r\n            Login\r\n              </Typography>\r\n          <form noValidate onSubmit={this.handleSubmit}>\r\n            <TextField\r\n              id=\"email\"\r\n              name=\"email\"\r\n              type=\"email\"\r\n              label=\"Email\"\r\n              className={classes.textField}\r\n              helperText={errors.email}\r\n              error={errors.email ? true : false}\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              id=\"password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              label=\"Password\"\r\n              className={classes.textField}\r\n              helperText={errors.password}\r\n              error={errors.password ? true : false}\r\n              value={this.state.password}\r\n              onChange={this.handleChange}\r\n              fullWidth\r\n            />\r\n            {errors.general && (\r\n              <Typography variant=\"body2\" className={classes.customError}>\r\n                {errors.general}\r\n              </Typography>\r\n            )}\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.button}\r\n              disabled={loading}\r\n            >\r\n              Login\r\n                  {loading && (\r\n                <CircularProgress size={30} className={classes.progress} />\r\n              )}\r\n            </Button>\r\n            <br />\r\n            <small>\r\n              dont have an account ? sign up <Link to=\"/signup\">here</Link>\r\n            </small>\r\n          </form>\r\n        </Grid>\r\n        <Grid item sm />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nlogin.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  loginUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  UI: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n  loginUser\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapActionsToProps\r\n)(withStyles(styles)(login));\r\n","import React, { Component } from 'react';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Logo from '../logo.svg';\r\nimport { connect } from 'react-redux';\r\nimport { signupUser } from '../redux/actions/userActions';\r\n// MUI Stuff\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst styles = (theme) => ({\r\n    ...theme.otherClasses\r\n});\r\n\r\n\r\n\r\nclass signup extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            handle: '',\r\n            errors: {}\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.UI.errors) {\r\n            this.setState({ errors: nextProps.UI.errors });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        const newUserData = {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            confirmPassword: this.state.confirmPassword,\r\n            handle: this.state.handle\r\n        }\r\n        this.props.signupUser(newUserData, this.props.history);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { classes, UI: { loading } } = this.props;\r\n        const { errors } = this.state;\r\n\r\n        return (\r\n            <Grid container className={classes.form}>\r\n                <Grid item sm />\r\n                <Grid item sm>\r\n                    <img src={Logo} alt='logo' className={classes.img} />\r\n                    <Typography variant='h2' className={classes.pageTitle}>Sign Up</Typography>\r\n                    <form noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            id='email'\r\n                            name='email'\r\n                            label='Email'\r\n                            className={classes.textField}\r\n                            helperText={errors.email}\r\n                            error={errors.email ? true : false}\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            fullWidth />\r\n                        <TextField\r\n                            id='password'\r\n                            name='password'\r\n                            type='password'\r\n                            label='Password'\r\n                            className={classes.textField}\r\n                            helperText={errors.password}\r\n                            error={errors.password ? true : false}\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                            fullWidth />\r\n                        <TextField\r\n                            id='confirmPassword'\r\n                            name='confirmPassword'\r\n                            type='password'\r\n                            label='Confirm Password'\r\n                            className={classes.textField}\r\n                            helperText={errors.confirmPassword}\r\n                            error={errors.confirmPassword ? true : false}\r\n                            value={this.state.confirmPassword}\r\n                            onChange={this.handleChange}\r\n                            fullWidth />\r\n                        <TextField\r\n                            id='handle'\r\n                            name='handle'\r\n                            label='User Name'\r\n                            className={classes.textField}\r\n                            helperText={errors.handle}\r\n                            error={errors.handle ? true : false}\r\n                            value={this.state.handle}\r\n                            onChange={this.handleChange}\r\n                            fullWidth />\r\n                        {errors.general && (\r\n                            <Typography variant='body2' className={classes.customError}>{errors.general}</Typography>\r\n                        )}\r\n                        {errors.error && (\r\n                            <Typography variant='body2' className={classes.customError}>{errors.error}</Typography>\r\n                        )}\r\n                        <Button type='submit' variant='contained' color='primary' className={classes.button} disabled={loading}>\r\n                            Submit\r\n                            {loading && (\r\n                                <CircularProgress size={30} className={classes.progress} />\r\n                            )}\r\n                        </Button>\r\n                        <br />\r\n                        <br />\r\n                        <small>Already have an account? Login <Link to='/login' className={classes.pointer}>here</Link></small>\r\n                    </form>\r\n                </Grid>\r\n                <Grid item sm />\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nsignup.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    user: PropTypes.object.isRequired,\r\n    UI: PropTypes.object.isRequired,\r\n    logoutUser: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    user: state.user,\r\n    UI: state.UI\r\n});\r\n\r\nconst mapActionsToProps = {\r\n    signupUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapActionsToProps)(withStyles(styles)(signup));\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { SET_AUTHENTICATED } from './redux/types';\nimport { logoutUser, getUserData } from './redux/actions/userActions';\n// Components\nimport Navbar from './components/layout/Navbar';\nimport AuthRoute from './util/AuthRoute';\n// Pages\nimport user from './pages/user';\nimport home from './pages/home';\nimport login from './pages/login';\nimport signup from './pages/signup';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#33c9dc',\n      main: '#00bcd4',\n      dark: '#008394',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: '#ff6333',\n      main: '#ff3d00',\n      dark: '#b22a00',\n      contrastText: '#fff'\n    }\n  },\n  otherClasses: {\n    typography: {\n      useNextVariants: true\n    },\n    form: {\n      textAlign: 'center'\n    },\n    image: {\n      margin: '20px auto 20px auto'\n    },\n    pageTitle: {\n      margin: '10px auto 10px auto'\n    },\n    textField: {\n      margin: '10px auto 10px auto'\n    },\n    button: {\n      marginTop: 20,\n      position: 'relative'\n    },\n    customError: {\n      color: 'red',\n      fontSize: '0.8rem',\n      marginTop: 10\n    },\n    progress: {\n      position: 'absolute'\n    },\n    invisibleSeperator: {\n      border: 'none',\n      margin: 4\n    },\n    visibleSeperator: {\n      width: '100%',\n      borderBottom: '1px solid rgba(0,0,0,0.1)',\n      marginBottom: 20\n    }\n  }\n});\n\naxios.defaults.baseURL = 'https://europe-west1-shoutout-e08db.cloudfunctions.net/api';\n\n\nconst token = localStorage.getItem('token');\nif (token) {\n  const decodedToken = jwtDecode(token);\n  if (decodedToken.exp * 1000 < Date.now()) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login';\n  } else {\n    store.dispatch({ type: SET_AUTHENTICATED });\n    axios.defaults.headers.common['Authorization'] = token;\n    store.dispatch(getUserData());\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n          <Router>\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={home} />\n                <AuthRoute exact path=\"/login\" component={login} />\n                <AuthRoute exact path=\"/signup\" component={signup} />\n                <Route exact path=\"/users/:handle\" component={user} />\n                <Route exact path=\"/users/:handle/scream/:screamId\" component={user} />\n              </Switch>\n            </div>\n          </Router>\n        </Provider>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}